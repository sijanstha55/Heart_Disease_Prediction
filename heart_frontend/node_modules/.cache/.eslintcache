[{"/Users/sijanshrestha/Desktop/projects_2022/HeartDiseasePredictions/heart_frontend/src/index.js":"1","/Users/sijanshrestha/Desktop/projects_2022/HeartDiseasePredictions/heart_frontend/src/reportWebVitals.js":"2","/Users/sijanshrestha/Desktop/projects_2022/HeartDiseasePredictions/heart_frontend/src/App.js":"3","/Users/sijanshrestha/Desktop/projects_2022/HeartDiseasePredictions/heart_frontend/src/components/InputForm.js":"4"},{"size":500,"mtime":1644542369666,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1644542369667,"results":"7","hashOfConfig":"6"},{"size":6845,"mtime":1645497327799,"results":"8","hashOfConfig":"6"},{"size":7269,"mtime":1645296200289,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1a2oh3s",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"13"},"/Users/sijanshrestha/Desktop/projects_2022/HeartDiseasePredictions/heart_frontend/src/index.js",[],[],["25","26"],"/Users/sijanshrestha/Desktop/projects_2022/HeartDiseasePredictions/heart_frontend/src/reportWebVitals.js",[],[],"/Users/sijanshrestha/Desktop/projects_2022/HeartDiseasePredictions/heart_frontend/src/App.js",["27","28","29","30","31","32","33"],[],"import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport InputForm from './components/InputForm';\n//import {TextField,InputLabel,MenuItem,Select,Grid, Card} from '@mui/material';\n\n\nfunction App() {\n  const [inputValues, setInputValues]= useState({\n    age:20,\n    sex:1,\n    trestbps:145,\n    fbs:1,\n    restecg:1,\n    thal:1,\n    slope:0,\n    cp:3,\n    oldpeak:2.3,\n    exang:1,\n  \n    ca:5,\n    thalach:2,\n    chol:200,\n  });\n  const[respon,setRespon]=useState('op')\n  require('react-dom');\n  window.React2 = require('react');\n  console.log(window.React1 === window.React2);\n  const[isLoading,setLoading]=useState(false)\n  const[result,setResult]=useState('Hi')\n\n\n  const handleChange=(event)=>{\n    const {name,value}=event.target;\n    setInputValues((prevState)=>{\n      return{\n        ...prevState,\n        [name]:parseFloat(value),\n      };\n    });\n    \n    }\n \n\n\n  const handleSubmit=(event)=>{\n    \n    setRespon('po');\n    const userData=inputValues;\n    console.log(userData);\n    setLoading(true);\n    fetch('https://heart-disease-p.herokuapp.com/prediction/',\n    {\n      headers:{\n\n        'Accept':'application/json',\n        'Content-Type':'application/json'\n      },\n      method:'POST',\n      body:JSON.stringify(userData)\n    })\n    .then(response=>response.json())\n    .then(response=>{\n      console.log('Got response',response)\n      setRespon(response)\n      setResult(response.result)\n      \n    });\n    event.preventDefault();\n    setLoading(false);\n  };\n   \n\n  \n  \n  return (\n    <div className=\"App\">\n      <div className='App-header'>\n        <h2>Heart Disease Prediction</h2>\n        <p>Note: This project is made just to practice. If you think you have a heart problem,\n          please visit your doctor.\n        </p>\n      </div>\n        \n        \n      <div className=\"form-container\">\n        <Form onSubmit={handleSubmit}> \n          \n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Row><Col>\n          <Form.Label>Age</Form.Label>\n          <Form.Control name='age' value={inputValues.age} onChange={handleChange} type=\"number\" placeholder=\"Enter Your Age\" />\n          </Col><Col>\n          <Form.Label>Sex</Form.Label>\n          <Form.Select name='sex' value={inputValues.sex} onChange={handleChange}> \n            <option value={1} >Male</option>\n            <option value={0} >Female</option>\n          </Form.Select>\n          </Col></Row>\n          <Row><Col>\n          <Form.Label>Chest Pain Type</Form.Label>\n          <Form.Select name='cp' value={inputValues.cp} onChange={handleChange}>\n            <option value={0} >0</option>\n            <option value={1}>1</option>\n            <option value={2} >2</option>\n            <option value={3} >3</option>\n          </Form.Select>\n          </Col><Col>\n          <Form.Label>Resting Blood Pressure</Form.Label>\n          <Form.Control name='trestbps' value={inputValues.trestbps} onChange={handleChange} type=\"number\" placeholder=\"In mm Hg\" />\n          </Col></Row></Form.Group>\n          <Form.Group>\n          <Row>\n            <Col>\n            <Form.Label>Serum Cholestrol Amount</Form.Label>\n            <Form.Control name='chol' value={inputValues.chol} onChange={handleChange} type=\"number\" placeholder=\"In mg/dl\" />\n            </Col>\n            <Col>\n            <Form.Label>Fasting Blood Sugar</Form.Label>\n            <Form.Select name='fbs' type='number' value={inputValues.fbs} onChange={handleChange} >\n              <option value={1} >True</option>\n              <option value={0} >False</option>\n            </Form.Select>\n            </Col>\n          </Row>\n        </Form.Group>\n        <Form.Group>\n          <Row>\n            <Col>\n            <Form.Label>Slope of the Peak Exercise ST segment</Form.Label>\n            <Form.Select name='slope' value={inputValues.slope} onChange={handleChange}>\n              <option value={0}>0</option>\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n            </Form.Select>\n            </Col>\n            <Col>\n            <Form.Label>Thal</Form.Label>\n            <Form.Select name='thal'  value={inputValues.thal} onChange={handleChange} >\n              <option value={0}>0</option>\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n            </Form.Select>\n            </Col>\n          </Row>\n        </Form.Group>\n        <Form.Group>\n          <Row>\n            <Col>\n            <Form.Label>Resting Electrocardiographic Results</Form.Label>\n            <Form.Select name='restecg' value={inputValues.restecg} onChange={handleChange} >\n              <option value={0} >0</option>\n              <option value={1} >1</option>\n              <option value={2} >2</option>\n            </Form.Select>\n            </Col>\n            <Col>\n            <Form.Label>Maximum Heart Achieved</Form.Label>\n            <Form.Control name='thalach' value={inputValues.thalach} onChange={handleChange} type=\"number\" placeholder=\"Enter Max Heart rate\"></Form.Control>\n            </Col>\n          </Row>\n        </Form.Group>\n        <Form.Group>\n          <Row>\n            <Col>\n            <Form.Label>Exercise Induced Angina</Form.Label>\n            <Form.Select name='exang' value={inputValues.exang} onChange={handleChange} >\n              <option value={1}>Yes</option>\n              <option value={0}>No</option>\n            </Form.Select>\n            </Col>\n            <Col>\n            <Form.Label>St Depression Induced by Exercise Relative to Rest</Form.Label>\n            <Form.Control name='oldpeak' value={inputValues.oldpeak} onChange={handleChange} type=\"number\" placeholder=\"ST Depression\" />\n            </Col>\n          </Row>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Number of major vessels colored by flourosopy</Form.Label>\n          <Form.Select name='ca' value={inputValues.ca} onChange={handleChange}>\n            <option value={0}>0</option>\n            <option value={1}>1</option>\n            <option value={2}>2</option>\n            <option value={3}>3</option>\n            <option value={4}>4</option>\n          </Form.Select>\n        </Form.Group>\n       \n        <Form.Group>\n        <Popup trigger={<Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>}\n        modal\n        nested>\n          <p>{result}</p>\n        </Popup>\n        </Form.Group>\n      </Form>\n        </div>\n    \n    </div>\n  );\n}\n\nexport default App;\n","/Users/sijanshrestha/Desktop/projects_2022/HeartDiseasePredictions/heart_frontend/src/components/InputForm.js",["34","35","36","37","38"],[],"import React, {useEffect, useState} from 'react';\nimport {TextField, Grid, InputLabel,MenuItem,FormControl,Select} from '@mui/material';\nimport Button from 'react-bootstrap/Button';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport Popup from 'reactjs-popup';\nfunction InputForm(){\n    const [inputValues, setInputValues]= useState({\n        age:20,\n        sex:1,\n        trestbps:145,\n        fbs:1,\n        restecg:1,\n        thal:1,\n        slope:0,\n        cp:3,\n        oldpeak:2.3,\n        exang:1,\n        feature1:2.4,\n        ca:5,\n        thalach:2,\n        chol:200,\n      });\n      const[respon,setRespon]=useState('op')\n      require('react-dom');\n      window.React2 = require('react');\n      console.log(window.React1 === window.React2);\n      const[isLoading,setLoading]=useState(false)\n      const[result,setResult]=useState('Hi')\n    \n    \n      const handleChange=(event)=>{\n        const {name,value}=event.target;\n        setInputValues((prevState)=>{\n          return{\n            ...prevState,\n            [name]:parseFloat(value),\n          };\n        });\n        \n        }\n     \n    \n    \n      const handleSubmit=(event)=>{\n        \n        setRespon('po');\n        const userData=inputValues;\n        console.log(userData);\n        setLoading(true);\n        fetch('https://heart-disease-p.herokuapp.com/prediction/',\n        {\n          headers:{\n    \n            'Accept':'application/json',\n            'Content-Type':'application/json'\n          },\n          method:'POST',\n          body:JSON.stringify(userData)\n        })\n        .then(response=>response.json())\n        .then(response=>{\n          console.log('Got response',response)\n          setRespon(response)\n          setResult(response.result)\n          \n        });\n        event.preventDefault();\n        setLoading(false);\n      };\n       \n    \n      \n      return (\n        <div className=\"Form\">\n    \n       \n        \n            <form className='input-form' onSubmit={handleSubmit}> \n            <Row>\n              <Col>\n                <TextField sx={{m:1}} onChange={handleChange} value={inputValues.age} required  label='Age' variant='standard' />\n              </Col>\n              <Col>\n                <FormControl variant='standard'>\n                  <InputLabel>Sex</InputLabel>\n                  <Select\n                    value={inputValues.sex}\n                    onChange={handleChange}\n                    label='Sex'\n                  >\n                    <MenuItem value={0}>Female</MenuItem>\n                    <MenuItem value={1}>Male</MenuItem>\n\n                  </Select>\n\n                </FormControl>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <FormControl sx={{m:1}} xs={6} variant='standard'>\n                <InputLabel>Chest Pain Type</InputLabel>\n                <Select\n                  autowidth\n                  value={inputValues.cp}\n                  onChange={handleChange}\n                  label='Chest Pain Type'\n                >\n                  <MenuItem value={0}>0</MenuItem>\n                  <MenuItem value={1}>1</MenuItem>\n                  <MenuItem value={2}>2</MenuItem>\n                  <MenuItem value={3}>3</MenuItem>\n                </Select>\n              </FormControl>\n              \n              </Col>\n              <Col>\n                <TextField required value={inputValues.chol} label='Serum Cholestrol Amount' variant='standard' onChange={handleChange} />\n              \n              </Col>\n\n            </Row>\n            \n            \n            <TextField required value={inputValues.trestbps} label='Fasting Blood Sugar' variant='standard' onChange={handleChange} />\n\n            <FormControl variant='standard'>\n              <InputLabel>Fasting Blood Pressure</InputLabel>\n              <Select\n                value={inputValues.fbs}\n                onChange={handleChange}\n                label='Fasting Blood Sugar'\n              >\n                <MenuItem value={0}>False</MenuItem>\n                <MenuItem value={1}>True</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl variant='standard'>\n              <InputLabel>Slope of the Peak Exercise</InputLabel>\n              <Select\n                value={inputValues.slope}\n                onChange={handleChange}\n                label='Slope'\n              >\n                <MenuItem value={0}>0</MenuItem>\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl variant='standard'>\n              <InputLabel>Thal</InputLabel>\n              <Select\n                value={inputValues.thal}\n                onChange={handleChange}\n                label='Thal'\n              >\n                <MenuItem value={0}>0</MenuItem>\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n                <MenuItem value={3}>3</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl variant='standard'>\n              <InputLabel>Resting Electrocardiographic Results</InputLabel>\n              <Select\n                value={inputValues.restecg}\n                onChange={handleChange}\n                label='Rest Ecg'\n              >\n                <MenuItem value={0}>0</MenuItem>\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n               \n              </Select>\n            </FormControl>\n            <TextField type='number' required value={inputValues.thalach} variant='standard' onChange={handleChange} />\n            <FormControl variant='standard'>\n              <InputLabel>Exercise Induced Angina</InputLabel>\n              <Select\n                value={inputValues.exang}\n                onChange={handleChange}\n                label='Exang'\n              >\n                <MenuItem value={0}>No</MenuItem>\n                <MenuItem value={1}>Yes</MenuItem>\n             \n              </Select>\n            </FormControl>\n\n            <TextField\n              required\n              value={inputValues.oldpeak}\n              type='number'\n              onChange={handleChange}\n              label='St Depression Induced w.r.t Rest'\n              varian='standard'\n            />\n            <FormControl variant='standard'>\n              <InputLabel>Number of major vessels colored by flourosopy</InputLabel>\n              <Select\n                value={inputValues.ca}\n                onChange={handleChange}\n                label='ca'\n              >\n                <MenuItem value={0}>0</MenuItem>\n                <MenuItem value={1}>1</MenuItem>\n                <MenuItem value={2}>2</MenuItem>\n                <MenuItem value={3}>3</MenuItem>\n                <MenuItem value={4}>4</MenuItem>\n              </Select>\n            </FormControl>\n            <Popup trigger={<Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>}\n            modal\n            nested>\n              <p>{result}</p>\n            </Popup>\n         \n          </form>\n          \n            \n            \n            \n        </div>\n      );\n\n}\n export default InputForm;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":3,"column":26,"nodeType":"45","messageId":"46","endLine":3,"endColumn":35},{"ruleId":"43","severity":1,"message":"48","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":12},{"ruleId":"43","severity":1,"message":"49","line":7,"column":9,"nodeType":"45","messageId":"46","endLine":7,"endColumn":18},{"ruleId":"43","severity":1,"message":"50","line":11,"column":8,"nodeType":"45","messageId":"46","endLine":11,"endColumn":17},{"ruleId":"43","severity":1,"message":"51","line":32,"column":9,"nodeType":"45","messageId":"46","endLine":32,"endColumn":15},{"ruleId":"43","severity":1,"message":"52","line":36,"column":9,"nodeType":"45","messageId":"46","endLine":36,"endColumn":18},{"ruleId":"43","severity":1,"message":"47","line":1,"column":16,"nodeType":"45","messageId":"46","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"53","line":2,"column":20,"nodeType":"45","messageId":"46","endLine":2,"endColumn":24},{"ruleId":"43","severity":1,"message":"49","line":4,"column":9,"nodeType":"45","messageId":"46","endLine":4,"endColumn":18},{"ruleId":"43","severity":1,"message":"51","line":23,"column":13,"nodeType":"45","messageId":"46","endLine":23,"endColumn":19},{"ruleId":"43","severity":1,"message":"52","line":27,"column":13,"nodeType":"45","messageId":"46","endLine":27,"endColumn":22},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'InputForm' is defined but never used.","'respon' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]